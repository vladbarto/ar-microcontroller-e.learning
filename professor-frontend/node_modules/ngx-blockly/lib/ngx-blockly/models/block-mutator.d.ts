export declare abstract class BlockMutator {
    private _name;
    private _blockList;
    constructor(name: string, blockList?: string[]);
    abstract decompose(block: any, workspace: any): any;
    abstract compose(block: any, topBlock: any): any;
    abstract saveConnections(block: any, containerBlock: any): any;
    abstract afterBlockInit(block: any): any;
    abstract saveExtraState(): any;
    abstract loadExtraState(state: any): any;
    /**
     * @deprecated Use saveExtraState instead
     * https://developers.google.com/blockly/guides/create-custom-blocks/extensions#saveextrastate_and_loadextra
     */
    mutationToDom(block: any): void;
    /**
     * @deprecated Use loadExtraState instead
     * https://developers.google.com/blockly/guides/create-custom-blocks/extensions#saveextrastate_and_loadextrastate
     */
    domToMutation(block: any, xmlElement: any): void;
    get name(): string;
    set name(value: string);
    get blockList(): string[];
    set blockList(value: string[]);
}
